# Link: https://grafana.com/docs/loki/latest/send-data/promtail/configuration/

# Configures the server for Promtail.
server:
  # HTTP server listen port. Default = 80
  http_listen_port: 9080
  # gRPC server listen port. Default = 9095
  grpc_listen_port: 0

# Describes how to save read file offsets to disk.
positions:
  # Location of positions file.
  filename: "/etc/promtail/positions.yaml"

# Describes how promtail connects to multiple instances of Loki, sending logs to each.
clients:
  - url: "http://edge-grafana-01.homelab:3100/loki/api/v1/push"

# Configures how Promtail can scrape logs from a series of targets using a specified discovery method.
scrape_configs:
  # Name to identify this scrape config in the Promtail UI.
  - job_name: "system"
    # Defines decompression behavior for the given scrape target.
    decompression:
      # Whether decompression should be tried or not.
      enabled: true
      # Initial delay to wait before starting the decompression.
      # Especially useful in scenarios where compressed files are found before the compression is finished.
      initial_delay: "10s"
      # Compression format. Supported formats are: 'gz', 'bz2' and 'z.
      format: "gz"

    # Static targets to scrape.
    static_configs:
      # Specifying a list of targets and a common label set for them. It is the canonical way to specify static targets in a scrape configuration.
      - targets:
          - "localhost"
        labels:
          # A `job` label is fairly standard in prometheus and useful for linking metrics and logs.
          job: "varlogs"
          # It helps identify logs from this machine vs others.
          host: "${HOSTNAME}"
          # The path to load logs from. Can use glob patterns (e.g., /var/log/*.log).
          __path__: "/var/log/**/*log"

# Configures global limits for this instance of Promtail
limits_config:
  # When true, enforces rate limiting on this instance of Promtail. Default = false.
  readline_rate_enabled: true

  # The rate limit in log lines per second that this instance of Promtail may push to Loki. Default = 10000.
  readline_rate: 20000

  # When true, exceeding the rate limit causes this instance of Promtail to discard log lines, rather than sending them to Loki.
  # When false, exceeding the rate limit causes this instance of Promtail to temporarily hold off on sending the log lines and retry later.
  readline_rate_drop: false
